%%%2009-04-24 msim4fit.m: to fit the simulation generated by msim4.m or
%%%real HX-MS data including two or more sub-populations:

clear


asyn_seq_WT='MDVFMKGLSKAKEGVVAAAEKTKQGVAEAAGKTKEGVLYVGSKTKEGVVHGVATVAEKTKEQVTNVGGAVVTGVTAVAQKTVEGAGSIAAATGFVKKDQLGKNEEGAPQEGILEDMPVDPDNEAYEMPSEEGYQDYEPEA';
asyn_seq_A53T='MDVFMKGLSKAKEGVVAAAEKTKQGVAEAAGKTKEGVLYVGSKTKEGVVHGVTTVAEKTKEQVTNVGGAVVTGVTAVAQKTVEGAGSIAAATGFVKKDQLGKNEEGAPQEGILEDMPVDPDNEAYEMPSEEGYQDYEPEA';
asyn_seq_A30P='MDVFMKGLSKAKEGVVAAAEKTKQGVAEAPGKTKEGVLYVGSKTKEGVVHGVATVAEKTKEQVTNVGGAVVTGVTAVAQKTVEGAGSIAAATGFVKKDQLGKNEEGAPQEGILEDMPVDPDNEAYEMPSEEGYQDYEPEA';

currSeq=input('entre the protein name(asyn_seq_WT or _A53T or _A30P): '); 


START=input('enter the START residue number of the peptide: ');
END=input('enter the END residue number of the peptide: '); 
z=input('enter the Charge State of the peptide: ');


MeanAllD=input('enter the Mean of allD sample: ');

mono=input('enter the Monoisotopic Mass of the peptide: '); 
CentroidAllH=z*(input('enter the centroid (m/z) of allH sample: ')-1);

T=input('enter the HX time (min): ');

doubleGaussianResults=input('enter the [Area1 Area2 Mean1 Mean2]: ');



%%%start from 'Distr' generated by msim4.m Case III


%%%double-Guassian fitting, get Area1, Mean1, Area2, Mean2,...


%%%to cal fraction of each sub-population:
area1=doubleGaussianResults(1);
area2=doubleGaussianResults(2);

fraction(1)=area1/(area1+area2)
fraction(2)=1-fraction(1) 



%%%to fit the (average) protection factor of each sub-population:
Mean1=doubleGaussianResults(3);
Mean2=doubleGaussianResults(4);

if currSeq==asyn_seq_WT
disp('using kc(/min) of WT a-Syn at 5"C pD4 H->D, generated by FBMME_HD_aSyn_WT.xls: ')
kc=[0	8.6346	0.14456	0.16082	0.14355	0.01093	0.05977	0.03808	0.0845	0.02169	0.03449	0.01093	0.12199	0.29261	0.12306	0.07946	0.09268	0.05884	0.05884	0.20721	0.03137	0.02953	0.01725	0.03449	0.10156	0.12306	0.09268	0.20721	0.16848	0.05884	0.10156	0.02671	0.02953	0.01725	0.12199	0.29261	0.12306	0.02459	0.01946	0.05626	0.16082	0.33601	0.02169	0.02953	0.01725	0.12199	0.29261	0.12306	0.07946	0.5833	0.68538	0.12306	0.09268	0.05019	0.07946	0.09268	0.20721	0.03137	0.02953	0.01725	0.12199	0.16848	0.05019	0.07946	0.09268	0.05019	0.16082	0.24909	0.14355	0.05019	0.07946	0.07946	0.16082	0.12306	0.07946	0.09268	0.05019	0.09268	0.05884	0.01093	0.02953	0.07946	0.32831	0.29261	0.14355	0.10156	0.33601	0.02169	0.03449	0.05884	0.05884	0.05019	0.16082	0.24909	0.12306	0.01725	0.00642	0.12199	0.16848	0.01561	0.06264	0.02671	0.03449	0.20721	0.59739	0.29261	0.14355	0	0.05884	0.20721	0.29261	0.02671	0.00915	0.12778	0.59739	0.16848	0	0.05019	0.32831	0	0.20721	0.16848	0.20721	0.16848	0.03153	0.23244	0.16848	0	0.13702	0.41288	0.59739	0.29261	0.07705	0.0657	0.20721	0.09046	0.23244	0	0.20721	0.00302
];
end

n=0;
for q=START:END
    if currSeq(q)=='P'    
        n=n+1;
    end
end  
maxD=END-START+1-2-n;

corrMean(1)=(Mean1+mono-CentroidAllH)/((MeanAllD+mono-CentroidAllH)/maxD);
corrMean(2)=(Mean2+mono-CentroidAllH)/((MeanAllD+mono-CentroidAllH)/maxD);

Para=[START END T];

p0=1;
lb=0; ub=Inf;
options=optimset;

for i=1:2
[pf(i),resnorm,residual,exitflag,output] = lsqnonlin(@msim4fit_fit,p0,lb,ub,options,Para,corrMean(i),kc)
end


